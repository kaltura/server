# *) In Eclipse: Run - Run... - In the navigation bar on the left select either the 
# server, or the runnable class, or the JUnit test you want to log with log4j -
# select the Classpath tab - User Entries - Advanced... - Add folders - OK - select 
# the "log4j" folder under the src folder - OK   
# *) Repeat last step for other servers, runnable classes or JUnit tests you want to log
# Level DEBUG - The DEBUG Level designates fine-grained informational events that are most useful to debug an application. 
# Level INFO - The INFO level designates informational messages that highlight the progress of the application at coarse-grained level. 
# Level WARN - The WARN level designates potentially harmful situations.
# Level ERROR - The ERROR level designates error events that might still allow the application to continue running.
# Level FATAL - The FATAL level designates very severe error events that will presumably lead the application to abort. 
log4j.category.KalturaClientBase.class=DEBUG
log4j.logger.com.kaltura=ERROR

log4j.rootCategory=INFO, R, O

# Stdout
log4j.appender.O=org.apache.log4j.ConsoleAppender

# File
log4j.appender.R=org.apache.log4j.RollingFileAppender
log4j.appender.R.File=log4j.log

# Control the maximum log file size
log4j.appender.R.MaxFileSize=100KB

# Archive log files (one backup file here)
log4j.appender.R.MaxBackupIndex=1

log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.O.layout=org.apache.log4j.PatternLayout

log4j.appender.R.layout.ConversionPattern=[%d{dd MMM yyyy HH:MM:ss}] %p - "%m" - (%F:%L) %n
log4j.appender.O.layout.ConversionPattern=[%d{dd MMM yyyy HH:MM:ss}] %p - "%m" - (%F:%L) %n

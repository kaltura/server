input
{
	rabbitmq
	{
		ack => false
		host => @RABBIT_MQ_SERVER@
		queue => "beacons"
		exchange => "beacon_exchange"
		durable => "true"
		exchange_type => "fanout"
		password => @RABBIT_MQ_PASSWORD@
		user => @RABBIT_MQ_USERNAME@
		passive => true
		port => @RABBIT_PORT@
		heartbeat => 30
		durable => true
		threads => 1
		automatic_recovery => true
		connect_retry_interval => 5
		connection_timeout => 60000
	}
}

filter
{
	mutate
	{
		add_field => { "[@metadata][_action]" => "%{[_action]}" }
		remove_field => "_action"
	}
	mutate
	{
		add_field => { "[@metadata][_index]" => "%{[_index]}" }
		remove_field => "_index"
	}
	mutate
	{
		add_field => { "[@metadata][_type]" => "%{[_type]}" }
		remove_field => "_type"
	}
	if [_id]
	{
		mutate
		{
			add_field => { "[@metadata][_id]" => "%{[_id]}" }
			remove_field => "_id"
		}
	}
	mutate
	{
		remove_field => "@timestamp"
	}
	mutate
	{
		remove_field => "@version"
	}
}

output
{
	file
	{
		path => "@LOG_DIR@/kaltura_beacons_output.log"
		flush_interval => 5
		file_mode => 0644
	}
	
	if [@metadata][_id]
	{
		elasticsearch
		{
			hosts => [ "@ELASTIC_SEARCH_HOST@:@ELASTIC_SEARCH_PORT@" ]
			action => "%{[@metadata][_action]}"
			document_id => "%{[@metadata][_id]}"
			document_type => "%{[@metadata][_type]}"
			index => "%{[@metadata][_index]}"
   		}
   	}
   	else
   	{
		elasticsearch
		{
			hosts => [ "@ELASTIC_SEARCH_HOST@:@ELASTIC_SEARCH_PORT@" ]
			action => "%{[@metadata][_action]}"
			document_type => "%{[@metadata][_type]}"
			index => "%{[@metadata][_index]}"
		}
   	}
	
	if [event_type] =~ "kes-beacon" {
		http 
		{
			format => "json"
			url => "http://@RULE_ENGINE_IP@:@RULE_ENGINE_PORT@/beacons/"
			http_method => "post"
		}
	}
}

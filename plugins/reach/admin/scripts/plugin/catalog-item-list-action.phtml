<?php if (!$this->allowed) {
	echo $this->translate('This partner is not allowed to use Reach');
	return;
} ?>
<p><?php echo $this->translate('Here you can configure your Catalog items'); ?></p>
<?php echo $this->filterForm; ?>
<?php echo $this->newCatalogItemFolderForm; ?>
<div id="catalog_item_list_div" class="clear">
    <table>
        <thead>
        <tr>
            <th><?php echo $this->translate('ID'); ?></th>
            <th><?php echo $this->translate('Status'); ?></th>
            <th><?php echo $this->translate('Name'); ?></th>
            <th><?php echo $this->translate('System Name'); ?></th>
            <th><?php echo $this->translate('Vendor Partner ID'); ?></th>
            <th><?php echo $this->translate('Feature'); ?></th>
            <th><?php echo $this->translate('Type'); ?></th>
            <th><?php echo $this->translate('Turn Around Time'); ?></th>
            <th><?php echo $this->translate('Source Language'); ?></th>
            <th><?php echo $this->translate('Target Language'); ?></th>
            <th><?php echo $this->translate('Output Format'); ?></th>
            <th><?php echo $this->translate('Stage'); ?></th>
            <th><?php echo $this->translate('Contract'); ?></th>
            <th><?php echo $this->translate('Notes'); ?></th>
            <th><?php echo $this->translate('Creation Date'); ?></th>
            <th><?php echo $this->translate('Created By'); ?></th>
            <th><?php echo $this->translate('Last Updated Date'); ?></th>
            <th><?php echo $this->translate('Last Bulk Update ID'); ?></th>
            <th><?php echo $this->translate('Action'); ?></th>
        </tr>
        </thead>
        <tfoot>
        <tr>
            <td colspan="19">
				<?php echo $this->paginator; ?>
            </td>
        </tr>
        </tfoot>
        <tbody>
				<?php if($this->paginator)
						foreach ($this->paginator as /* Kaltura_Client_Reach_Type_VendorCatalogItem */  $catalogItem): ?>
            <tr class="<?php echo $this->cycle(array('odd', 'even'))->next(); ?>">
                <td><?php echo $catalogItem->id; ?></td>
                <td><?php echo $this->enumTranslate('Kaltura_Client_Reach_Enum_VendorCatalogItemStatus', $catalogItem->status); ?></td>
                <td><?php echo $catalogItem->name; ?></td>
                <td><?php echo $catalogItem->systemName; ?></td>
                <td><?php echo $catalogItem->vendorPartnerId; ?></td>
                <td><?php echo $this->enumTranslate('Kaltura_Client_Reach_Enum_VendorServiceFeature', $catalogItem->serviceFeature); ?></td>
                <td><?php echo $this->enumTranslate('Kaltura_Client_Reach_Enum_VendorServiceType', $catalogItem->serviceType); ?></td>
                <td><?php echo $this->enumTranslate('Kaltura_Client_Reach_Enum_VendorServiceTurnAroundTime', $catalogItem->turnAroundTime); ?></td>
                <td><?php echo $this->enumTranslate('Kaltura_Client_Reach_Enum_CatalogItemLanguage', $catalogItem->sourceLanguage); ?></td>
                <td><?php if (isset($catalogItem->targetLanguage))
                    echo $this->enumTranslate('Kaltura_Client_Reach_Enum_CatalogItemLanguage', $catalogItem->targetLanguage);
                else
                    echo null;?>
                </td>
                <td><?php if (isset($catalogItem->outputFormat))
					{
                        if($catalogItem instanceof Kaltura_Client_Reach_Type_VendorSignLanguageCatalogItem)
						{
                            echo $this->enumTranslate('Kaltura_Client_Reach_Enum_VendorCatalogItemSignLanguageOutputFormat', $catalogItem->outputFormat);
                        }
						else
						{
                            echo $this->enumTranslate('Kaltura_Client_Reach_Enum_VendorCatalogItemOutputFormat', $catalogItem->outputFormat);
                        }
					}
					else
                    {
                        echo null;
					}
					?>
                </td>
                <td><?php if (isset($catalogItem->stage))
						echo $this->enumTranslate('Kaltura_Client_Reach_Enum_VendorCatalogItemStage', $catalogItem->stage);
					else
						echo null;?>
                </td>
                <td><?php echo $catalogItem->contract; ?></td>
                <td><?php echo $catalogItem->notes; ?></td>
                <td><?php echo date($this->translate('time format'), $catalogItem->createdAt); ?></td>
                <td><?php echo $catalogItem->createdBy; ?></td>
                <td><?php echo date($this->translate('time format'), $catalogItem->updatedAt); ?></td>
                <td><?php echo $catalogItem->lastBulkUpdateId; ?></td>
                <td>
                    <select class="options" onchange="doAction(this.value, <?php echo $catalogItem->id; ?>)">
                        <option value=""><?php echo $this->translate('Select Action'); ?></option>
                        <option value="configureCatalogItem"><?php echo $this->translate('Configure'); ?></option>
						<?php if ($catalogItem->status === Kaltura_Client_Reach_Enum_VendorCatalogItemStatus::DEPRECATED): ?>
                            <option value="enable"><?php echo $this->translate('Enable'); ?></option>
						<?php elseif ($catalogItem->status === Kaltura_Client_Reach_Enum_VendorCatalogItemStatus::ACTIVE): ?>
                            <option value="disable"><?php echo $this->translate('Deprecate'); ?></option>
						<?php endif; ?>
                        <option value="remove"><?php echo $this->translate('Remove'); ?></option>
                    </select>
                </td>
            </tr>
		<?php endforeach; ?>
        </tbody>
    </table>
</div>

<script type="text/javascript">

	$(function () {
		updateFiltersView();
	});

	jQuery('#filter_type').change(function () {
		if (this.value == "none") {
			$("#filter_text").css("display", "none");
		}
		else {
			$("#filter_text").css("display", "inline");
			$("#filter_text input").focus();
			if (this.value == "free")
				$("div.help").show();
			else
				$("div.help").hide();
		}
	});

	jQuery('#filter_type').change();

	function doAction(action, folderId) {
		if (action && eval('typeof ' + action) == 'function') {
			f = eval(action);
			Array.prototype.shift.apply(arguments);
			f.apply(this, arguments);
		}
		jQuery('select.options').val('');
	}

	function enable(catalogItemId) {
		changeStatus(
			catalogItemId,
			
			<?php echo Kaltura_Client_Reach_Enum_VendorCatalogItemStatus::ACTIVE; ?>,
			function () {
				alert('<?php echo $this->translate('Catalog Item enabled');?>');
			}
		);
	}

	function disable(catalogItemId) {
		changeStatus(
			catalogItemId,
			<?php echo Kaltura_Client_Reach_Enum_VendorCatalogItemStatus::DEPRECATED; ?>,
			function () {
				alert('<?php echo $this->translate('Catalog Item disabled');?>');
			}
		);
	}

	function remove(catalogItemId) {
		var ok = confirm('<?php echo $this->translate('Are you sure you want to remove Catalog Item ?'); ?>');
		if (ok) {
			changeStatus(
				catalogItemId,
				<?php echo Kaltura_Client_Reach_Enum_VendorCatalogItemStatus::DELETED; ?>,
				function () {
					alert('<?php echo $this->translate('Catalog Item removed');?>');
				}
			);
		}
	}

	function changeStatus(catalogItemId, status, callback) {
		var url = '<?php echo $this->url(array('controller' => 'plugin', 'action' => 'CatalogItemSetStatusAction', 'catalogItemId' => 'CATALOGITEMID', 'catalogItemStatus' => 'STATUS')); ?>';
		url = url.replace('STATUS', status);
		url = url.replace('CATALOGITEMID', catalogItemId);
  
		jQuery.ajax({
			url: url,
			dataType: 'json',
			success: function (result) {
				if (result != 'ok')
					this.error(result);
				else {
					if (callback && (typeof callback == 'function')) {
						callback.apply(this);
					}
				}
				jQuery('#frmPaginator1').submit();
			},
			error: function (result) {
				alert(result);
			}
		});
	}

	function addNewCatalogItem(partnerId, catalogItemType, catalogItemServiceType, catalogItemTurnAroundTime) {
		if (!catalogItemType || !catalogItemType.length) {
			alert('<?php echo $this->translate('Catalog item type not supplied'); ?>');
			return;
		}

		var paramsStr = '/new_partner_id/' + partnerId + '/new_catalog_item_type/' + catalogItemType + '/new_catalog_item_service_type/' + catalogItemServiceType + '/new_catalog_item_turn_around_time/' + catalogItemTurnAroundTime;

		loadCatalogItem(paramsStr);
	}

    function exportToCsv(partnerId) {
        var paramsStr = '/partner_id/' + partnerId;
        var url = '<?php echo $this->url(array('controller' => 'plugin', 'action' => 'CatalogItemExportAction')); ?>' + paramsStr;

        jQuery('#catalog-item-export-dialog').remove();
        dialogDiv = jQuery('<div id="catalog-item-export-dialog"><?php echo $this->translate('Loading...'); ?></div>').appendTo('body');

        dialogDiv.dialog({
            bgiframe: true,
            modal: true,
            resizable: true,
            wordWrap: "break-word",
            wordwrap: "breakword",
            width: 500,
            title: '<?php echo $this->translate('CSV Export Link'); ?>',
            buttons: {
                '<?php echo $this->translate('Close'); ?>': function () {
                    jQuery(this).dialog('close');
                }
            },
            close: function () {
                jQuery(this).dialog('destroy').remove();
            }
        });

        dialogDiv.load(
            url,
            null,
            null
        );
    }

      function importFromCsv() {

          dialogDiv = jQuery('<div id="catalog-item-import-dialog"><?php echo $this->translate('Loading...'); ?></div>').appendTo('body');

          dialogDiv.dialog({
              bgiframe: true,
              modal: true,
              resizable: true,
              wordWrap: "break-word",
              wordwrap: "breakword",
              width: 500,
              title: '<?php echo $this->translate('CSV Import'); ?>',
              buttons: {
                  '<?php echo $this->translate('Close'); ?>': function () {
                      jQuery(this).dialog('close');
                  }
              },
              close: function () {
                  jQuery(this).dialog('destroy').remove();
              }
          });

        var formData = new FormData();
        formData.append('csvFile', $('input[type=file]')[0].files[0]);

        var url = '<?php echo $this->url(array('controller' => 'plugin', 'action' => 'CatalogItemImportAction')); ?>';

        $.ajax({
            url: url,
            data: formData,
            type: 'POST',
            contentType: false,
            processData: false ,
            success: function (result) {
                $('#catalog-item-import-dialog').html(result);
            },
            error: function (result) {
                $('#catalog-item-import-dialog').html(result);
            }
        });
    }

    function getBulkUploadResult(bulkUploadId) {

        var paramsStr = '/bulk_upload_id/' + bulkUploadId;
        var url = '<?php echo $this->url(array('controller' => 'plugin', 'action' => 'CatalogItemImportResultAction')); ?>' + paramsStr;

        jQuery('#catalog-item-import-result-dialog').remove();
        dialogDiv = jQuery('<div id="catalog-item-import-result-dialog"><?php echo $this->translate('Loading...'); ?></div>').appendTo('body');

        dialogDiv.dialog({
            bgiframe: true,
            modal: true,
            resizable: true,
            wordWrap: "break-word",
            wordwrap: "breakword",
            width: 500,
            title: '<?php echo $this->translate('Bulk Upload Result'); ?>',
            buttons: {
                '<?php echo $this->translate('Close'); ?>': function () {
                    jQuery(this).dialog('close');
                }
            },
            close: function () {
                jQuery(this).dialog('destroy').remove();
            }
        });

        dialogDiv.load(
            url,
            null,
            null
        );
    }

	function configureCatalogItem(catalogItemId, partnerId) {
		if (typeof catalogItemId == 'undefined') {
			alert('<?php echo $this->translate('Catalog Item ID not supplied'); ?>');
			return;
		}

		var catalogItemIdStr = '/catalog_item_id/' + catalogItemId + '/new_partner_id/' + partnerId;

		var url = '<?php echo $this->url(array('controller' => 'plugin', 'action' => 'CatalogItemConfigureAction', 'catalogItemPricingClz' => 'Null')); ?>' + catalogItemIdStr;

		jQuery('#catalog-item-configure-dialog').remove();
		dialogDiv = jQuery('<div id="catalog-item-configure-dialog"><?php echo $this->translate('Loading...'); ?></div>').appendTo('body');

		dialogDiv.dialog({
			bgiframe: true,
			modal: true,
			resizable: false,
			width: 600,
			height: 600,
			title: '<?php echo $this->translate('Catalog Item'); ?>',
			buttons: {
				'<?php echo $this->translate('Save'); ?>': function () {
					removeDisableTags();
					jQuery(this).find('#frmCatalogItemConfigure').submit();
				},
				'<?php echo $this->translate('Close'); ?>': function () {
					jQuery(this).dialog('close');
				}
			},
			close: function () {
				jQuery(this).dialog('destroy').remove();
			}
		});

		dialogDiv.load(
			url,
			null,
			function () {
				addDisableTags();
				jQuery(this).find('#frmCatalogItemConfigure').ajaxForm({
					success: loadCatalogItemSuccess,
					iframe: true
				});
			}
		);
	}

	function removeDisableTags() {
		jQuery('#isDefault').removeAttr('disabled');
		jQuery('#serviceType').removeAttr('disabled');
		jQuery('#turnAroundTime').removeAttr('disabled');
		jQuery('#source-language-fieldSet').removeAttr('disabled');
		jQuery('#target-language-fieldSet').removeAttr('disabled');
		jQuery('#output-formats-fieldSet').removeAttr('disabled');
		jQuery('#fieldset-pricing').removeAttr('disabled');
	}

	function cloneCatalogItemTemplate(partnerId, cloneTemplateId) {
		if (!partnerId.length || isNaN(partnerId)) {
			alert('<?php echo $this->translate('Publisher ID not supplied'); ?>');
			return;
		}

		if (!cloneTemplateId || !cloneTemplateId.length) {
			alert('<?php echo $this->translate('Catalog Template was not supplied'); ?>');
			return;
		}

		var paramsStr1 = '/new_partner_id/' + partnerId + '/clone_template_id/' + cloneTemplateId;

		var url = '<?php echo $this->url(array('controller' => 'plugin', 'action' => 'CatalogItemConfigureAction', 'catalogItemPricingClz' => 'Null')); ?>' + paramsStr1;

		jQuery('#catalog-item-configure-dialog').remove();
		dialogDiv = jQuery('<div id="catalog-item-configure-dialog"><?php echo $this->translate('Loading...'); ?></div>').appendTo('body');

		dialogDiv.dialog({
			bgiframe: true,
			modal: true,
			resizable: false,
			width: 600,
			height: 600,
			title: '<?php echo $this->translate('Catalog Item Template Setup Configuration'); ?>',
			buttons: {
				'<?php echo $this->translate('Save'); ?>': function () {
					jQuery('.ui-widget-overlay').css('z-index', 1003);
					jQuery('#loader').show();
					removeDisableTags();
					jQuery(this).find('#frmCatalogItemConfigure').submit();
				},
				'<?php echo $this->translate('Close'); ?>': function () {
					jQuery(this).dialog('close');
				}
			},
			close: function () {
				jQuery(this).dialog('destroy').remove();
			}
		});

		dialogDiv.load(
			url,
			null,
			function () {
				addDisableTags();
				jQuery('#frmCatalogItemConfigure').ajaxForm({
					success: loadCatalogItemSuccess,
					iframe: true
				});
			}
		);
	}

	function addDisableTags() {
		jQuery('#source-language-fieldSet').attr('disabled', 'disabled');
		jQuery('#target-language-fieldSet').attr('disabled', 'disabled');
		jQuery('#output-formats-fieldSet').attr('disabled', 'disabled');
	}

	function loadCatalogItem(paramStr) {
		var url = '<?php echo $this->url(array('controller' => 'plugin', 'action' => 'CatalogItemConfigureAction', 'catalogItemPricingClz' => 'Null')); ?>' + paramStr;

		jQuery('#catalog-item-configure-dialog').remove();
		dialogDiv = jQuery('<div id="catalog-item-configure-dialog"><?php echo $this->translate('Loading...'); ?></div>').appendTo('body');

		dialogDiv.dialog({
			bgiframe: true,
			modal: true,
			resizable: false,
			width: 600,
			height: 600,
			title: '<?php echo $this->translate('Catalog Item'); ?>',
			buttons: {
				'<?php echo $this->translate('Save'); ?>': function () {
					jQuery('.ui-widget-overlay').css('z-index', 1003);
					jQuery('#loader').show();
					jQuery(this).find('#frmCatalogItemConfigure').submit();
				},
				'<?php echo $this->translate('Close'); ?>': function () {
					jQuery(this).dialog('close');
				}
			},
			close: function () {
				jQuery(this).dialog('destroy').remove();
			}
		});

		dialogDiv.load(
			url,
			null,
			function () {
				jQuery(this).find('#frmCatalogItemConfigure').ajaxForm({
					success: loadCatalogItemSuccess,
					iframe: true
				});
			}
		);
	}

	function loadCatalogItemSuccess(html) {
		if (jQuery(html).filter('#frmCatalogItemConfigure').hasClass('valid')) {
			dialogDiv.dialog('close');
			if (jQuery('#frmPaginator1').length) {
				jQuery('#frmPaginator1').submit();
			}
			else {
				jQuery('#frmPartnerIdFilter').submit();
			}
		}
		jQuery('.ui-widget-overlay').css('z-index', 1000);
		jQuery('#loader').hide();
		jQuery('#frmCatalogItemConfigure').replaceWith(html);
		jQuery('#frmCatalogItemConfigure').ajaxForm({
			success: loadCatalogItemSuccess,
			iframe: true
		});
	}

	function updateFiltersView() {
		var templateServiceFeature = jQuery('#filterServiceFeature').val();

		jQuery('#filterSourceLanguage').attr('hidden', 1);
		jQuery('#filterTargetLanguage').attr('hidden', 1);

		if (templateServiceFeature == <?php echo Kaltura_Client_Reach_Enum_VendorServiceFeature::CAPTIONS; ?>) {
			jQuery('#filterSourceLanguage').removeAttr('hidden');
		}

		if (templateServiceFeature == <?php echo Kaltura_Client_Reach_Enum_VendorServiceFeature::ALIGNMENT; ?>) {
			jQuery('#filterSourceLanguage').removeAttr('hidden');
		}

        if (templateServiceFeature == <?php echo Kaltura_Client_Reach_Enum_VendorServiceFeature::AUDIO_DESCRIPTION; ?>) {
            jQuery('#filterSourceLanguage').removeAttr('hidden');
        }

		if (templateServiceFeature == <?php echo Kaltura_Client_Reach_Enum_VendorServiceFeature::EXTENDED_AUDIO_DESCRIPTION; ?>) {
			jQuery('#filterSourceLanguage').removeAttr('hidden');
		}

        if (templateServiceFeature == <?php echo Kaltura_Client_Reach_Enum_VendorServiceFeature::CHAPTERING; ?>) {
            jQuery('#filterSourceLanguage').removeAttr('hidden');
        }

        if (templateServiceFeature == <?php echo Kaltura_Client_Reach_Enum_VendorServiceFeature::DUBBING; ?>) {
            jQuery('#filterSourceLanguage').removeAttr('hidden');
            jQuery('#filterTargetLanguage').removeAttr('hidden');
        }

		if (templateServiceFeature == <?php echo Kaltura_Client_Reach_Enum_VendorServiceFeature::SIGN_LANGUAGE; ?>) {
			jQuery('#filterSourceLanguage').removeAttr('hidden');
			jQuery('#filterTargetLanguage').removeAttr('hidden');
		}
		
		if (templateServiceFeature == <?php echo Kaltura_Client_Reach_Enum_VendorServiceFeature::TRANSLATION; ?>) {
			jQuery('#filterSourceLanguage').removeAttr('hidden');
			jQuery('#filterTargetLanguage').removeAttr('hidden');
		}

		if (templateServiceFeature == <?php echo Kaltura_Client_Reach_Enum_VendorServiceFeature::LIVE_TRANSLATION; ?>) {
			jQuery('#filterSourceLanguage').removeAttr('hidden');
			jQuery('#filterTargetLanguage').removeAttr('hidden');
		}
	}
</script>
